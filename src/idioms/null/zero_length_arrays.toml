[[questions]]
type = "MultipleChoice"
prompt.prompt = """
Which is the most idiomatic translation of the following C++ program?

```cpp
#include <cstddef>

void fillFrom(std::size_t len, int arr[], int val) {
  for (std::size_t i; i < len; i++) {
    arr[i] = val;
    val++;
  }
}

int main() {
  fill(0, nullptr, 5);
}
```
"""

prompt.distractors = [
"""
```rust
fn fill_from(size: usize, arr: &mut [i32], mut val: i32) {
    for i in 0..size {
        arr[i] = val;
        val += 1;
    }
}

fn main() {
    let mut x = [];
    fill_from(0, &mut x, 5);
}
```
""",
"""
```rust
fn fill_from(size: usize, opt_arr: Option<&mut [i32]>, mut val: i32) {
    if let Some(arr) = opt_arr {
        for i in 0..size {
            arr[i] = val;
            val += 1;
        }
    }
}

fn main() {
    fill_from(0, None, 5);
}
```
"""
]
answer.answer = """
```rust
fn fill_from(arr: &mut [i32], mut val: i32) {
    for x in arr {
        *x = val;
        val += 1;
    }
}

fn main() {
    let mut x = [];
    fill_from(&mut x, 5);
}
```
"""
context = """
An even more idiomatic implementation would be to use the
[`fill`](https://doc.rust-lang.org/std/primitive.slice.html#method.fill) method
on the slice type.

```rust
fn main() {
    let mut x: [i32; 0] = [];
    x.fill(5);
}
```
"""
id = "b1f64fba-b6d1-445e-85fb-08a1dfd29fc2"
