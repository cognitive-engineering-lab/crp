[[questions]]
type = "MultipleChoice"
prompt.prompt="""
Which Rust program is the most idiomatic translation of the following C++
program?

```cpp
#include <optional>
#include <utility>
#include <vector>

template <typename K, typename V>
class Assoc {
  std::vector<std::pair<K, V>> assocs;

public:
  void insert(K key, V value) {
    assocs.push_front(std::make_pair(key, value));
  }

  std::optional<V &> lookup(K key) const {
    K k;
    V v;
    for (std::pair<K, V> assoc : assocs) {
      std::tie(k, v) = assoc;
      if (k == key) {
        return std::make_optional(v);
      }
    }
    return std::nullopt;
  }
};
```
"""
prompt.distractors = [
"""
```rust
use std::collections::vec_deque::*;

pub struct Assoc<K, V> {
    assocs: VecDeque<(K, V)>,
}

impl<K, V> Assoc<K, V> {
    pub fn insert(&mut self, key: K, value: V) {
        self.assocs.push_front((key, value));
    }

    pub fn lookup(&self, key: K) -> Option<&V> {
        for (k, v) in &self.assocs {
            if *k == key {
                return Some(v);
            }
        }

        None
    }
}
```
""",
"""
```rust
use std::collections::vec_deque::*;

pub struct Assoc<K, V> {
    assocs: VecDeque<(K, V)>,
}

impl<K, V> Assoc<K, V>
where
    K: Eq,
{
    pub fn insert(&mut self, key: K, value: V) {
        self.assocs.push_front((key, value));
    }

    pub fn lookup(&self, key: K) -> Option<&V> {
        for (k, v) in &self.assocs {
            if *k == key {
                return Some(v);
            }
        }

        None
    }
}
```
"""
]
answer.answer = """
```rust
use std::collections::vec_deque::*;

pub struct Assoc<K, V> {
    assocs: VecDeque<(K, V)>,
}

impl<K, V> Assoc<K, V> {
    pub fn insert(&mut self, key: K, value: V) {
        self.assocs.push_front((key, value));
    }

    pub fn lookup(&self, key: K) -> Option<&V>
    where
        K: Eq,
    {
        for (k, v) in &self.assocs {
            if *k == key {
                return Some(v);
            }
        }

        None
    }
}
```
"""
id = "07a5f967-6274-456e-ba10-ccc66bea69b7"
