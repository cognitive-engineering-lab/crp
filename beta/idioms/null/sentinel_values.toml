[[questions]]
type = "MultipleChoice"
prompt.prompt="""
Which is the most idiomatic translation of the following C++ program?

```cpp
#include <limits>

int findMax(int arr[], int size) {
  if (size <= 0) {
    return std::numeric_limits<int>::min();
  }

  int max = arr[0];
  for (int i = 1; i < size; ++i) {
    if (arr[i] > max) {
      max = arr[i];
    }
  }
  return max;
}
```
"""
prompt.distractors = [
"""
```rust
fn find_max(arr: &[i32]) -> i32 {
    if arr.is_empty() {
        return i32::MIN;
    }

    let mut max = arr[0];
    for &num in &arr[1..] {
        if num > max {
            max = num;
        }
    }
    max
}
```
""",
"""
```rust
use std::num::NonZero;

fn find_max(arr: &[i32]) -> Option<NonZero<i32>> {
    if arr.is_empty() {
        return None;
    }

    let mut max = arr[0];
    for &num in &arr[1..] {
        if num > max {
            max = num;
        }
    }
    NonZero::new(max)
}
```
"""
]
answer.answer = """
```rust
fn find_max(arr: &[i32]) -> Option<i32> {
    if arr.is_empty() {
        return None;
    }

    let mut max = arr[0];
    for &num in &arr[1..] {
        if num > max {
            max = num;
        }
    }
    Some(max)
}
```
"""
context = """
The idiomatic Rust program to find the maximum value in a slice would just
involve calling the `Iterator::max` method on the iterator for the slice.

```rust
fn find_max(arr: &[i32]) -> Option<i32> {
    arr.into_iter().max().copied()
}
```
"""
id = "917b2f68-b4ea-486c-beab-5aa07101ea83"
